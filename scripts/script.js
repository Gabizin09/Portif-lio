// Array com as vagas em destaque
const jobListings = [
    {
        id: 'dev-frontend-react',
        title: "Desenvolvedor Frontend React",
        company: "Tech Solutions",
        location: "S√£o Paulo, SP",
        type: "CLT",
        salary: "R$ 5.000 - R$ 8.000",
        description: "Desenvolvimento de interfaces web modernas usando React, TypeScript e Material-UI.",
        requirements: [
            "React.js e TypeScript",
            "HTML5, CSS3, JavaScript",
            "Git e metodologias √°geis",
            "1+ ano de experi√™ncia"
        ],
        benefits: [
            "Vale Refei√ß√£o/Alimenta√ß√£o",
            "Plano de Sa√∫de",
            "Gym Pass",
            "Day Off no anivers√°rio"
        ]
    },
    {
        id: 'analista-marketing',
        title: "Analista de Marketing Digital",
        company: "Marketing Pro",
        location: "Remoto",
        type: "PJ",
        salary: "R$ 4.500 - R$ 6.500",
        description: "Gest√£o de campanhas digitais, an√°lise de m√©tricas e estrat√©gias de crescimento.",
        requirements: [
            "Google Analytics e Meta Ads",
            "SEO e Marketing de Conte√∫do",
            "Excel avan√ßado",
            "2+ anos de experi√™ncia"
        ],
        benefits: [
            "Trabalho 100% remoto",
            "Hor√°rio flex√≠vel",
            "Aux√≠lio home office",
            "Cursos e certifica√ß√µes"
        ]
    },
    {
        id: 'aux-administrativo',
        title: "Auxiliar Administrativo",
        company: "Grupo Empresarial Brasil",
        location: "Rio de Janeiro, RJ",
        type: "CLT",
        salary: "R$ 2.200 - R$ 2.800",
        description: "Suporte administrativo, organiza√ß√£o de documentos e atendimento.",
        requirements: [
            "Pacote Office",
            "Boa comunica√ß√£o",
            "Ensino m√©dio completo",
            "Experi√™ncia anterior desej√°vel"
        ],
        benefits: [
            "Vale Transporte",
            "Vale Refei√ß√£o",
            "Plano de Sa√∫de",
            "Seguro de Vida"
        ]
    },
    {
        id: 'estagio-ti',
        title: "Est√°gio em TI",
        company: "InnovaTech",
        location: "Curitiba, PR",
        type: "Est√°gio",
        salary: "R$ 1.800 - R$ 2.000",
        description: "Suporte em projetos de desenvolvimento e infraestrutura de TI.",
        requirements: [
            "Cursando TI ou √°reas relacionadas",
            "Conhecimento b√°sico em programa√ß√£o",
            "Ingl√™s intermedi√°rio",
            "Disponibilidade para 6h di√°rias"
        ],
        benefits: [
            "Vale Transporte",
            "Vale Refei√ß√£o",
            "Curso de Ingl√™s",
            "Possibilidade de efetiva√ß√£o"
        ]
    }
];

// Fun√ß√£o para exibir as vagas em destaque
function displayFeaturedJobs() {
    const jobsList = document.getElementById('jobsList');
    if (!jobsList) return;

    jobsList.innerHTML = jobListings.map(job => `
        <div class="job-card" data-job-id="${job.id}">
            <div class="job-header">
                <h3 class="job-title">${job.title}</h3>
                <span class="job-type">${job.type}</span>
            </div>
            <div class="job-company">
                <strong>${job.company}</strong>
                <span class="job-location">üìç ${job.location}</span>
            </div>
            <div class="job-salary">
                <i class="salary-icon">üí∞</i> ${job.salary}
            </div>
            <div class="job-description">
                ${job.description}
            </div>
            <div class="job-details">
                <div class="requirements">
                    <h4>Requisitos:</h4>
                    <ul>
                        ${job.requirements.map(req => `<li>${req}</li>`).join('')}
                    </ul>
                </div>
                <div class="benefits">
                    <h4>Benef√≠cios:</h4>
                    <ul>
                        ${job.benefits.map(benefit => `<li>${benefit}</li>`).join('')}
                    </ul>
                </div>
            </div>
            <button class="apply-btn" onclick="applyForJob('${job.id}')">Candidatar-se</button>
        </div>
    `).join('');
}

// Fun√ß√£o para candidatar-se √† vaga
function applyForJob(jobId) {
    // Verificar se o usu√°rio est√° logado
    const isLoggedIn = localStorage.getItem('userLoggedIn');
    
    if (!isLoggedIn) {
        // Se n√£o estiver logado, redirecionar para a p√°gina de login
        localStorage.setItem('lastJobId', jobId); // Salvar a vaga para retornar depois
        window.location.href = 'login.html';
        return;
    }

    // Se estiver logado, redirecionar para a p√°gina da vaga
    window.location.href = `vaga.html?id=${jobId}`;
}

// Fun√ß√£o para pesquisar vagas
document.getElementById('search-form').addEventListener('submit', function(event) {
    event.preventDefault();
    const keyword = document.getElementById('search-keyword').value.toLowerCase();
    const location = document.getElementById('search-location').value.toLowerCase();

    const filteredJobs = jobListings.filter(job => {
        const matchesKeyword = 
            job.title.toLowerCase().includes(keyword) || 
            job.description.toLowerCase().includes(keyword) ||
            job.company.toLowerCase().includes(keyword);
        const matchesLocation = 
            job.location.toLowerCase().includes(location) ||
            (location === '' && job.location === 'Remoto');
        
        return matchesKeyword && (location === '' || matchesLocation);
    });

    displaySearchResults(filteredJobs);
});

// Fun√ß√£o para exibir resultados da busca
function displaySearchResults(results) {
    const resultsContainer = document.getElementById('results');
    if (!resultsContainer) return;

    if (results.length === 0) {
        resultsContainer.innerHTML = `
            <div class="no-results">
                <h3>Nenhuma vaga encontrada</h3>
                <p>Tente outros termos ou localiza√ß√£o</p>
            </div>
        `;
        return;
    }

    resultsContainer.innerHTML = results.map(job => `
        <div class="job-card search-result">
            <div class="job-header">
                <h3 class="job-title">${job.title}</h3>
                <span class="job-type">${job.type}</span>
            </div>
            <div class="job-company">
                <strong>${job.company}</strong>
                <span class="job-location">üìç ${job.location}</span>
            </div>
            <div class="job-salary">
                <i class="salary-icon">üí∞</i> ${job.salary}
            </div>
            <div class="job-description">
                ${job.description}
            </div>
            <button class="apply-btn">Candidatar-se</button>
        </div>
    `).join('');
}

// Carregar vagas em destaque quando a p√°gina carregar
document.addEventListener('DOMContentLoaded', displayFeaturedJobs);

// Banners rotativos para o topo
const banners = [
    'Sua nova oportunidade est√° a um clique! <b>Cadastre-se</b> e encontre o emprego ideal.',
    'üí° Atualize seu curr√≠culo e aumente suas chances de ser contratado!',
    'üåé Vagas para todo o Brasil e tamb√©m para trabalho remoto.',
    'üöÄ Cadastre-se para receber vagas no seu e-mail!',
    'üëî Empresas de destaque est√£o procurando por voc√™!'
];

let bannerIndex = 0;
const bannerText = document.getElementById('bannerText');

function rotateBanner() {
    if (!bannerText) return;
    bannerText.style.opacity = 0;
    setTimeout(() => {
        bannerIndex = (bannerIndex + 1) % banners.length;
        bannerText.innerHTML = banners[bannerIndex];
        bannerText.style.opacity = 1;
    }, 500);
}

if (bannerText) {
    setInterval(rotateBanner, 4000);
}